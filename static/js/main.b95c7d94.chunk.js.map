{"version":3,"sources":["assets/images/Header/logo.png","assets/images/About Me/actor.png","assets/images/Footer/github.png","assets/images/Footer/linkedin.png","assets/images/Main/banner-bg.png","assets/images/Contact/astro.png","assets/images/Contact/loading-gif.gif","reportWebVitals.ts","data/config.ts","components/about.tsx","components/header.tsx","components/projects.tsx","components/footer.tsx","process/key_config.ts","components/contact.tsx","components/overview.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","config","head","title","icon","logo","header","nav_bar","about_me","text","link","projects","contact","connect_button","background","overview","image","actor","description","aboutMe","workout_visualizer","tools","scrabble_game","scrabble_game_extension","md_online","portfolio","mcba_bank","mcba_console","lol_checker","astro","loading","loading_gif","contact_info","email","phone","address","footer","copyright","socials","github","github_social","alt","linkedin","linkedin_social","AboutMe","_useState","useState","_useState2","Object","slicedToArray","items","_useState3","_useState4","currentItemIndex","setCurrentItemIndex","react_default","a","createElement","id","className","onClick","index_es","faChevronLeft","length","faChevronRight","Header","handleClick","location","event","preventDefault","division","document","getElementById","scrollIntoView","behavior","href","width","src","entries","map","_ref2","value","self","target","Projects","setIsVisible","useEffect","setTimeout","window","open","key","Footer","key_config","env","recaptcha_site_key","recaptcha_secret_key","email_js","public_key","service_id","template_id","Contact","name","message","formState","setFormState","_React$useState","React","_React$useState2","isRecaptchaValid","setIsRecaptchaValid","_React$useState3","_React$useState4","showRecapError","setShowRecapError","_React$useState5","_React$useState6","showEmailSendSuccess","setEmailSendSuccess","_React$useState7","_React$useState8","showEmailSendError","setEmailSendError","submitIsLoading","setSubmitIsLoading","handleInputChange","_event$target","prevState","objectSpread","defineProperty","_sendEmail","send","response","console","log","status","catch","err","onSubmit","placeholder","type","onChange","_event$target2","esm","sitekey","disabled","Overview","isVisible","concat","ReactDOM","createRoot","render","StrictMode","components_header","components_overview","components_projects","components_about","components_contact","components_footer"],"mappings":"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","file":"static/js/main.b95c7d94.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2304402b.png\";","module.exports = __webpack_public_path__ + \"static/media/actor.493eca7f.png\";","module.exports = __webpack_public_path__ + \"static/media/github.8f401a85.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.77b3f49a.png\";","module.exports = __webpack_public_path__ + \"static/media/banner-bg.6074be65.png\";","module.exports = __webpack_public_path__ + \"static/media/astro.10b96125.png\";","module.exports = __webpack_public_path__ + \"static/media/loading-gif.f3716107.gif\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import actor from \"../assets/images/About Me/actor.png\";\r\nimport github_social from \"../assets/images/Footer/github.png\";\r\nimport logo from \"../assets/images/Header/logo.png\";\r\nimport linkedin_social from \"../assets/images/Footer/linkedin.png\";\r\nimport background from \"../assets/images/Main/banner-bg.png\";\r\nimport astro from \"../assets/images/Contact/astro.png\";\r\nimport loading_gif from \"../assets/images/Contact/loading-gif.gif\";\r\n\r\nexport const config = {\r\n    head: {\r\n        title: \"Mev's Portfolio\",\r\n        icon: logo\r\n    },\r\n    header: {\r\n        logo: logo,\r\n        title: \"Software Engineer\",\r\n        nav_bar: {\r\n            about_me: {\r\n                text: \"About\",\r\n                link: \"about-me\"\r\n            },\r\n            projects: {\r\n                text: \"Projects\",\r\n                link: \"projects\"\r\n            },\r\n            contact: {\r\n                text: \"Contact\",\r\n                link: \"contact\"\r\n            }\r\n        },\r\n        connect_button: {\r\n            text: \"Let's Connect\",\r\n            link: \"https://www.linkedin.com/in/mevlut-ishak-saluk-2a620217a/\"\r\n        },\r\n        background: background\r\n    },\r\n    overview: {\r\n        image: actor,\r\n        title: \"Hi! I'm Mev\",\r\n        description: `I\\'m a software engineering student based in Melbourne, Australia. I\\'m passionate about creating innovative and impactful software solutions. I\\'m currently studying at RMIT University and I\\'m looking for opportunities to apply my skills and knowledge to challenging projects.`,\r\n    },\r\n    aboutMe: {\r\n        title: \"About Me\",\r\n        description: `As a current software engineering student at RMIT, I am excited to combine my previous IT degree and passion for programming to pursue a career in web development or backend engineering. With experience in languages such as Python, C++, and Java, I have a strong foundation in programming and a proven ability to deliver high-quality projects.\r\n        \r\n        \\nI am particularly interested in backend development and have experience working with REST APIs. In my university projects and personal projects, I have demonstrated my ability to design and implement efficient and scalable solutions, and I am always looking for opportunities to learn and grow as a software engineer.\r\n        \r\n        \\nIn the future, I hope to work with a team of talented engineers to create innovative and impactful software solutions. I am eager to apply my skills and knowledge to challenging projects and continue to develop my expertise in web development and backend engineering.`\r\n    },\r\n    projects: {\r\n        workout_visualizer: {\r\n            title: \"Workout Visualizer\",\r\n            description: \"A useful workout visualizer that nicely formats saved workouts in the application into an Excel file.\",\r\n            tools: [\"Python\", \"PyQT5\", \"MVC\", \"SQLite\", \"GUI\"],\r\n            link: \"https://github.com/Meviii/Workout-Visualizer\"\r\n        },\r\n        scrabble_game: {\r\n            title: \"Scrabble Game\",\r\n            description: \"A text based scrabble game that was created for a university project that was built by four members.\",\r\n            tools: [\"C++\", \"Linked List\", \"ADT\", \"Blackbox Testing\"],\r\n            link: \"https://github.com/Meviii/APT-Assignment-2\"\r\n        },\r\n        scrabble_game_extension: {\r\n            title: \"Scrabble Game Extension\",\r\n            description: \"This is a personal extension to the Scrabble Game with more advanced features such as four player mode and advanced word checking\",\r\n            tools: [\"C++\", \"Custom Algorithms\", \"Linked List\", \"ADT\", \"Blackbox Testing\"],\r\n            link: \"https://github.com/Meviii/APT-Assignment2-Individual\"\r\n        },\r\n        md_online: {\r\n            title: \"MD Online - Telemedicine Application\",\r\n            description: \"An application designed for a private clinic providing doctor/patient communications and a medical and appointment booking system.\",\r\n            tools: [\"REST API\", \"MySQL\", \"Flutter\", \"Java\", \"Spring Boot\"],\r\n            link: \"https://github.com/Meviii/SEPT2022\"\r\n        },\r\n        portfolio: {\r\n            title: \"Portfolio Website\",\r\n            description: \"A well organised portfolio website that presents my projects in a nice way :D\",\r\n            tools: [\"React\", \"TypeScript\", \"CSS\", \"EmailJS\"],\r\n            link: \"https://github.com/Meviii/mev-portfolio\"\r\n        },\r\n        mcba_bank: {\r\n            title: \"MCBA - Most Common Bank of Australia\",\r\n            description: \"An application designed for a bank providing a banking system for customers. Consists of an Admin API, Admin WEB Portal and a Customer WEB Application.\",\r\n            tools: [\"REST API\", \"Azure SQL\", \".NET\", \"HTML/CSS\", \"C#\", \"MVC\"],\r\n            link: \"https://github.com/rmit-wdt-fs-2023/s3717696-s3811920-a2\"\r\n        },\r\n        mcba_console: {\r\n            title: \"MCBA - Console Application\",\r\n            description: \"Console version of the WEB MCBA. This console application written in C# was designed for a bank providing a banking system with general features for customers.\",\r\n            tools: [\"C#\", \"MVC\", \"Dependency Injection\", \"Azure SQL\"],\r\n            link: \"https://github.com/rmit-wdt-fs-2023/s3717696-a1\"\r\n        },\r\n        lol_checker: {\r\n            title: \"League of Legends Account Checker/Profiler\",\r\n            description: \"A GUI application that interacts with the RIOT API to retrieve detailed data about the supplied accounts. Also completes time consuming tasks in seconds.\",\r\n            tools: [\"C#\", \"GUI\", \"API\", \"Multi-Threading\"],\r\n            link: \"https://github.com/Meviii/LOL-Account-Checker\"\r\n        }\r\n\r\n    },\r\n    contact: {\r\n        title: \"Contact Me\",\r\n        description: \"Feel free to contact me for any inquiries or job opportunities!\",\r\n        image: astro,\r\n        loading: loading_gif,\r\n        contact_info: {\r\n            email: \"misaluk20@gmail.com\",\r\n            phone: \"+61 438 000 000\",\r\n            address: \"Melbourne, Australia\",\r\n        }\r\n    },\r\n    footer: {\r\n        copyright: \"© All rights are reserved | 2022 | Made with 💖 by Mev\",\r\n        socials: {\r\n            github: {\r\n                image: github_social,\r\n                alt: \"Github\",\r\n                link: \"https://github.com/Meviii\"\r\n            },\r\n            linkedin: {\r\n                image: linkedin_social,\r\n                alt: \"LinkedIn\",\r\n                link: \"https://www.linkedin.com/in/mevlut-ishak-saluk-2a620217a/\"\r\n            }\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport '../styles/about.css';\r\nimport { config } from \"../data/config\";\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface Item {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nconst AboutMe = () => {\r\n    const [items, setItems] = useState<Item[]>([\r\n        {\r\n            title: 'Goal',\r\n            description: 'I aim to develop problem-solving skills, critical thinking abilities, and effective communication skills, all of which are essential for working collaboratively in a team environment and delivering software projects that meet the needs of stakeholders. My ultimate goal as a student software engineer is to become a well-rounded professional who can contribute meaningfully to the software development industry.',\r\n        },\r\n        {\r\n            title: 'Interest',\r\n            description: 'I am particularly interested in backend development and have experience working with REST APIs. In my university projects and personal projects, I have demonstrated my ability to design and implement efficient and scalable solutions, and I am always looking for opportunities to learn and grow as a software engineer.',\r\n        },\r\n        {\r\n            title: 'Hobbies',\r\n            description: 'My main excitement comes from writing simple programs that make my life easier and lets me be a little more lazier. Apart from that, I really enjoy working out at the gym, playing video games, watching movies, and listening to music.',\r\n        },\r\n    ]);\r\n\r\n    const [currentItemIndex, setCurrentItemIndex] = useState(0);\r\n\r\n\r\n    const handleLeftClick = () => {\r\n        if (currentItemIndex > 0) {\r\n            setCurrentItemIndex(currentItemIndex - 1);\r\n        }\r\n    };\r\n\r\n    const handleRightClick = () => {\r\n        if (currentItemIndex < items.length - 1) {\r\n            setCurrentItemIndex(currentItemIndex + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"about-me\" className=\"about-me\">\r\n\r\n            <h2 className=\"about-me-title\">{config.aboutMe.title}</h2>\r\n            <div className=\"arrow left-arrow\" onClick={handleLeftClick}>\r\n                <FontAwesomeIcon icon={faChevronLeft} />\r\n            </div>\r\n            <div className=\"carousel-item\">\r\n                <div className=\"carousel-card\">\r\n                    <h2>{items[currentItemIndex].title}</h2>\r\n                    <p>{items[currentItemIndex].description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"arrow right-arrow\" onClick={handleRightClick}>\r\n                <FontAwesomeIcon icon={faChevronRight} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutMe;\r\n","import React from 'react';\r\nimport '../styles/header.css';\r\nimport { config } from '../data/config';\r\n\r\nfunction Header() {\r\n\r\n\r\n    const handleClick = (location: string, event: React.MouseEvent<HTMLAnchorElement>) => {\r\n        event.preventDefault();\r\n\r\n        const division = document.getElementById(location);\r\n\r\n        if (division) {\r\n            division.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"header-container\">\r\n                <div className=\"logo\">\r\n                    <a href=\"/mev-portfolio\">\r\n                        <img width=\"50\" src={config.header.logo} alt={config.header.title} />\r\n                    </a>\r\n                </div>\r\n                <div className=\"nav-bar\">\r\n                    <nav>\r\n                        <ul>\r\n                            {Object.entries(config.header.nav_bar).map(([key, value]) => (\r\n                                <a onClick={handleClick.bind(self, value.link)} href={value.link}>\r\n                                    <li>{value.text}</li>\r\n                                </a>\r\n                            ))}\r\n                        </ul>\r\n                    </nav>\r\n                    <a href={config.header.connect_button.link} target=\"_blank\">\r\n                        <button>{config.header.connect_button.text}</button>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from 'react';\r\nimport '../styles/projects.css';\r\nimport { config } from '../data/config';\r\n\r\nfunction Projects() {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsVisible(true);\r\n        }, 1000);\r\n    }, []);\r\n\r\n    return (\r\n        <div id='projects' className='projects'>\r\n            <h2>Projects</h2>\r\n            <div className='card-container'>\r\n                {Object.entries(config.projects).map(([key, value]) => (\r\n                    <div className='card' onClick={() => window.open(value.link)}>\r\n                        <h4 className='card__title'>{value.title}</h4>\r\n                        <p className='card__description'>{value.description}</p>\r\n                        <div className='card__tools'>\r\n                            <ul>\r\n                                {value.tools.map(tools => (\r\n                                    <li key={tools}>{tools}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Projects;\r\n","import React from 'react';\r\nimport '../styles/footer.css';\r\nimport { config } from '../data/config';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <div className=\"container\">\r\n                <div className=\"copyright\">\r\n                    <p>{config.footer.copyright}</p>\r\n                </div>\r\n                <div className=\"social-container\">\r\n                    {Object.entries(config.footer.socials).map(([key, value]) => (\r\n                        <div className='social-buttons'>\r\n                            <a href={value.link} target=\"_blank\">\r\n                                <img width=\"30\" src={value.image} alt={value.alt} />\r\n                            </a>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","export const key_config = {\r\n    env: {\r\n        recaptcha_site_key: \"6LcWY60jAAAAANY8n3hgDYUODtBlLawGQloYdIoS\",\r\n        recaptcha_secret_key: \"6LcWY60jAAAAAC4SySwHyDS_a1f-J6C08HJ_TiGq\"\r\n    },\r\n    email_js: {\r\n        public_key: \"8IsvxjZmdqWtGsCXB\",\r\n        service_id: \"service_9t52gtc\",\r\n        template_id: \"template_sqyse7o\"\r\n    }\r\n\r\n}","import React, { useState, useRef } from 'react';\r\nimport '../styles/contact.css';\r\nimport { config } from '../data/config';\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { key_config } from '../process/key_config';\r\nimport { send } from 'emailjs-com';\r\n\r\ntype ContactFormState = {\r\n    name: string;\r\n    email: string;\r\n    message: string;\r\n};\r\n\r\nfunction Contact() {\r\n    const [formState, setFormState] = useState<ContactFormState>({\r\n        name: '',\r\n        email: '',\r\n        message: '',\r\n    });\r\n\r\n    const [isRecaptchaValid, setIsRecaptchaValid] = React.useState(false);\r\n    const [showRecapError, setShowRecapError] = React.useState(false);\r\n    const [showEmailSendSuccess, setEmailSendSuccess] = React.useState(false);\r\n    const [showEmailSendError, setEmailSendError] = React.useState(false);\r\n    const [submitIsLoading, setSubmitIsLoading] = useState(false);\r\n\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        setFormState((prevState) => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n    const handleMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        const { name, value } = event.target;\r\n        setFormState((prevState) => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n\r\n    const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        if (isRecaptchaValid) {\r\n            setSubmitIsLoading(true);\r\n            _sendEmail();\r\n        } else {\r\n            setShowRecapError(true);\r\n        }\r\n    };\r\n\r\n    const _sendEmail = () => {\r\n\r\n        send(key_config.email_js.service_id,\r\n            key_config.email_js.template_id,\r\n            formState,\r\n            key_config.email_js.public_key\r\n        )\r\n            .then((response) => {\r\n                console.log('Sent', response.status, response.text);\r\n                setEmailSendSuccess(true);\r\n                setSubmitIsLoading(false)\r\n            })\r\n            .catch((err) => {\r\n                console.log('FAILED...', err);\r\n                setEmailSendError(true);\r\n                setSubmitIsLoading(false)\r\n            });\r\n    }\r\n\r\n    const handleRecaptchaChange = (response: string | null) => {\r\n        setIsRecaptchaValid(!!response);\r\n    }\r\n\r\n    return (\r\n        <div id=\"contact\" className=\"contact\">\r\n            <h2>Contact</h2>\r\n            <p>{config.contact.description}</p>\r\n            <div className='contact-container'>\r\n                <div className='contact-form'>\r\n                    <form onSubmit={handleFormSubmit}>\r\n                        <div className='form-input'>\r\n                            <input placeholder='Name*' type=\"text\" name=\"name\" value={formState.name} onChange={handleInputChange} />\r\n\r\n                            <input placeholder='Email*' type=\"email\" name=\"email\" value={formState.email} onChange={handleInputChange} />\r\n\r\n                            <textarea placeholder='Message*' name=\"message\" value={formState.message} onChange={handleMessageChange} />\r\n\r\n                            <ReCAPTCHA sitekey={key_config.env.recaptcha_site_key} onChange={handleRecaptchaChange} />\r\n\r\n                            <div className='button-response-container'>\r\n                                <div className='button-container'>\r\n                                    <button type=\"submit\" disabled={submitIsLoading} >\r\n                                        {submitIsLoading ? <img width=\"25\" src={config.contact.loading} alt='loading' /> : 'Submit'}\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <div className='response-container'>\r\n                                    {showRecapError && <p>Please complete the form.</p>}\r\n                                    {showEmailSendSuccess && <p>Thank you for your message. I will get back to you as soon as possible.</p>}\r\n                                    {showEmailSendError && <p>There was an error sending your message. Please try again later.</p>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className='contact-image'>\r\n                    <img width=\"400\" src={config.contact.image} alt='contact' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;","import React, { useState, useEffect } from 'react';\r\nimport '../styles/overview.css';\r\nimport { config } from \"../data/config\";\r\n\r\nfunction Overview() {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsVisible(true);\r\n        }, 1000);\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"overview\" className=\"overview\">\r\n            <div className={`slide-in-from-left ${isVisible ? 'visible' : ''}`}>\r\n                <div className=\"overview-details\">\r\n                    <h1 className=\"title\">{config.overview.title}</h1>\r\n                    <p className=\"description\">{config.overview.description}</p>\r\n                </div>\r\n            </div>\r\n            <div className='overview-image'>\r\n                <img className={`slide-in-from-right ${isVisible ? 'visible' : ''}`} width=\"500\" src={config.overview.image} alt='about-me' />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overview;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { config } from './data/config';\n\nimport About from './components/about';\nimport Header from './components/header';\nimport Projects from './components/projects';\nimport Footer from './components/footer';\nimport Contact from './components/contact';\nimport Overview from './components/overview';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <Header />\n    <Overview />\n    <Projects />\n    <About />\n    <Contact />\n    <Footer />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}